SELECT 
    BOOK_ID, TITLE, AUTHOR_FNAME
FROM
    BOOKS;

-- ORDER BY - USED TO SORT THE FIELDS ALPHABETICALLY
SELECT 
    BOOK_ID, TITLE, AUTHOR_FNAME
FROM
    BOOKS
ORDER BY TITLE;

-- IT BYDEFAULT SORTS IN AESCENDING ORDER
-- BUT WE CAN SORT IN DESCENDING ORDER
SELECT 
    BOOK_ID, TITLE, AUTHOR_FNAME
FROM
    BOOKS
ORDER BY TITLE DESC;

-- IT IS WRITTER AT LAST
-- WE CAN ASLO USE FIELDS THAT ARE IN THE TABLE BUT NO TIN THE SELECT STATEMENT

-- WE CAN ASLO PROVIDE THE INDEX OF THE FIELDS THAT ARE IN THE SELECT TO ORDER BY
SELECT 
    BOOK_ID, TITLE, AUTHOR_FNAME
FROM
    BOOKS
ORDER BY 2; -- IS SAME AS ORDER BY TITLE


SELECT 
    AUTHOR_LNAME, RELEASED_YEAR, TITLE
FROM
    BOOKS
ORDER BY AUTHOR_LNAME;
-- HERE SOME AUTHORS HAVE SAME LNAME SO WE CAN PROVIDE ANOTHER FIELD TO ORDER BY WHICH WILL BE USED IN THIS TYPE OF CONFLICTING SITUTATION
SELECT 
    AUTHOR_LNAME, RELEASED_YEAR, TITLE
FROM
    BOOKS
ORDER BY AUTHOR_LNAME, RELEASED_YEAR;

-- WE CAN ASLO SEPERATE THE DESC PARAMETER IN THE FIELDS
SELECT 
    AUTHOR_LNAME, RELEASED_YEAR, TITLE
FROM
    BOOKS
ORDER BY AUTHOR_LNAME, RELEASED_YEAR DESC;


-- WE CAN ALSO USE ALIAS IN ORDER BY
SELECT 
    CONCAT(AUTHOR_FNAME,' ',AUTHOR_LNAME) AS AUTHOR
FROM
    BOOKS
ORDER BY AUTHOR;